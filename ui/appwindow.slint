import { VerticalBox } from "std-widgets.slint";
import { Word, PrimaryButton } from "control/controls.slint";
import { Keyboard } from "control/keyboard/keyboard.slint";
import { WordSearcher } from "models.slint";

export { WordSearcher }

export AppWindow := Window {
    title: "5 letters";

    VerticalBox { 
        HorizontalLayout { 
            padding-bottom: 10px;

            PrimaryButton { text: "Clear"; clicked => { WordSearcher.clear-all() } }
            Rectangle { horizontal-stretch: 2; }
            PrimaryButton { text: "Random words"; clicked => { WordSearcher.random() } }
        }
        HorizontalLayout {  
            padding-bottom: 6px;

            VerticalLayout {
                spacing: 6px;
                horizontal-stretch: 2;
                padding: 6px;

                for word[index] in WordSearcher.words: Word { 
                    selected: WordSearcher.current-word-index == index;
                    word: word;
                    index: index + 1;

                    clicked => { 
                        WordSearcher.current-word-index = index;
                    }

                    letter-state-changed(letter, sate) => { 
                        WordSearcher.letter-state-changed(index, letter, sate);
                    }
                }
            }

            VerticalLayout {  
                horizontal-stretch: 2;
                padding: 6px;

                Rectangle { 
                    border-color: #dee1e9;
                    border-radius: 4px;
                    border-width: 2px;

                    Flickable {
                        HorizontalLayout { 
                            Text { 
                                text: WordSearcher.search_words;
                                color: #5a6376;
                                font-size: 16pt;
        
                                horizontal-alignment: center;
                            }
                        }
                    }
                }
            }
        }
        
        Keyboard { 
            key-pressed(key) => { 
                WordSearcher.key-pressed(key);
            } 
        }
    }
}
